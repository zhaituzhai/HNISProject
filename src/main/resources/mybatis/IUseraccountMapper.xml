<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhaojm.mapper.IUseraccountMapper">
  <resultMap id="BaseResultMap" type="com.zhaojm.bean.UseraccountDTO">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="account_type" jdbcType="INTEGER" property="accountType" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_phone, password, user_type, account_type, creat_time
  </sql>
  <sql id="Base_Dic_Column_List">
    a.user_id, a.user_name, a.user_phone, a.password, a.account_type, a.creat_time, b.data_value user_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from useraccount
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from useraccount
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhaojm.bean.UseraccountDTO">
    insert into useraccount (user_id, user_name, user_phone, 
      password, user_type, account_type, creat_time
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, #{accountType,jdbcType=INTEGER},
      #{creatTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhaojm.bean.UseraccountDTO">
    insert into useraccount
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhaojm.bean.UseraccountDTO">
    update useraccount
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        account_type = #{creatTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhaojm.bean.UseraccountDTO">
    update useraccount
    set user_name = #{userName,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=INTEGER}
      creat_time = #{creatTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <!-- 自定义 sql -->
  <!-- 根据名字或电话查出此人信息 -->
   <select id="selectByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from useraccount
    where (user_name = #{loginName,jdbcType=VARCHAR} OR user_phone = #{loginName,jdbcType=VARCHAR})
  </select>
  <!-- 根据输入条件查询出用户 -->
  <select id="queryUserList" resultMap="BaseResultMap">
  select
  <include refid="Base_Dic_Column_List"/>
  from useraccount a,dictionary b
  where user_id is not null
  <if test="userName != null and userName !=''">
  and user_name LIKE 
  ( concat('%',concat(#{userName},'%')) )
  </if>
  <if test="userPhone != null and userPhone != ''">
  and user_phone LIKE
  ( concat('%',concat(#{userPhone},'%')) )
  </if>
  <if test="userType != null and userType != ''">
  and user_type = #{userType}
  </if>
  <if test="accountType != null and accountType != ''">
  and accountType = #{accountType}
  </if>
  and a.user_type = b.data_code AND b.data_type='userType'
  order by creat_time desc
  
  </select>
  
  
</mapper>