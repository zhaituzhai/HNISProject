<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.zhaojm</groupId>
	<artifactId>HNISProject</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>HNISProject Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- 热部署模块 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional> <!-- 这个需要为 true 热部署才有效 -->
		</dependency>
		<!-- myBatis 在spring boot 中使用 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- mybatis分页插件 -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>1.2.3</version>
		</dependency>
		<!-- end mybatis -->
		<!-- Swagger 2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.4.0</version>
		</dependency>
		<!-- end -->
		<!-- poi依赖，文件导入导出 -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.9</version>
		</dependency>
		<!-- end -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<!-- 如果想用springmvc @RequestBody注解做提交json字符串自动绑定到pojo入参时， 类型需要是"application/json;charset=UTF-8"，否则会抛"not 
			supported"异常。 -->

		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<formats>
						<!-- 报告显示格式（html为浏览器版，xml为数据版嵌入jenkins的数据） -->
						<format>html</format>
						<format>xml</format>
					</formats>
					<check>
						<!-- 每个类的分支覆盖率 <branchRate>85</branchRate> 每个类的代码行覆盖率 <lineRate>85</lineRate> -->
						<!--校验失败则中止.即为true时如果校验失败则打包执行失败,反之则只是打出告警日志 -->
						<haltOnFailure>true</haltOnFailure>
						<!--整体的分支覆盖率 -->
						<!-- <totalBranchRate>85</totalBranchRate> 整体的代码行覆盖率 <totalLineRate>85</totalLineRate> 
							每个包的分支行覆盖率 <packageBranchRate>85</packageBranchRate> 每个包的代码行覆盖率 <packageLineRate>85</packageLineRate> -->
						<!-- 使用正则表达统计符合某个规则的的覆盖率的程度 （运行mvn cobertura:check时如果没有达到转haltOnFailure配置的内容） -->
						<regexes>
							<regex>
								<pattern>com.zhaojm.cobertura.controller.*</pattern>
								<branchRate>100</branchRate>
								<lineRate>100</lineRate>
							</regex>
						</regexes>
					</check>
					<!-- 过滤不处理的类 -->
					<instrumentation>
						<!--<ignore>.*</ignore> -->
						<excludes>
							<!-- 过滤类名为某个规则的类 -->
							<exclude>**/*Application.class</exclude>
							<exclude>**/*Enum.class</exclude>
							<!-- 过滤包下的所有类 -->
							<exclude>**/bean/*.class</exclude>
							<!-- <exclude>**/*Service.class</exclude> -->
							<!-- <exclude>**/*Test.class</exclude> -->
						</excludes>
					</instrumentation>
				</configuration>
				<!-- 执行周期 -->
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
							<goal>cobertura</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
